<?xml version="1.0" encoding="utf-8"?>
<!--        Generated by IRIS Noah Taxonomy Editor -->
<link:linkbase xsi:schemaLocation="http://xbrl.org/2010/filter/aspect-cover http://www.xbrl.org/2010/aspect-cover-filter.xsd http://xbrl.org/2008/filter/boolean http://www.xbrl.org/2008/boolean-filter.xsd http://xbrl.org/2008/assertion/consistency http://www.xbrl.org/2008/consistency-assertion.xsd http://xbrl.org/2008/filter/concept http://www.xbrl.org/2008/concept-filter.xsd http://xbrl.org/2010/custom-function http://www.xbrl.org/2010/custom-function-implementation.xsd http://xbrl.org/2008/filter/dimension http://www.xbrl.org/2008/dimension-filter.xsd http://xbrl.org/2008/assertion/existence http://www.xbrl.org/2008/existence-assertion.xsd http://xbrl.org/2008/formula http://www.xbrl.org/2008/formula.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/filter/general http://www.xbrl.org/2008/general-filter.xsd http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2008/filter/match http://www.xbrl.org/2008/match-filter.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd http://xbrl.org/2008/filter/period http://www.xbrl.org/2008/period-filter.xsd http://xbrl.org/2008/filter/tuple http://www.xbrl.org/2008/tuple-filter.xsd http://xbrl.org/2008/filter/unit http://www.xbrl.org/2008/unit-filter.xsd http://xbrl.org/2008/assertion/value http://www.xbrl.org/2008/value-assertion.xsd http://xbrl.org/2008/validation http://www.xbrl.org/2008/validation.xsd http://xbrl.org/2010/message/validation http://www.xbrl.org/2010/validation-message.xsd http://xbrl.org/2008/variable http://www.xbrl.org/2008/variable.xsd http://www.xbrl.org/2003/instance http://www.xbrl.org/2003/xbrl-instance-2003-12-31.xsd http://www.w3.org/1999/xlink http://www.xbrl.org/2003/xlink-2003-12-31.xsd " xmlns:acf="http://xbrl.org/2010/filter/aspect-cover" xmlns:bf="http://xbrl.org/2008/filter/boolean" xmlns:ca="http://xbrl.org/2008/assertion/consistency" xmlns:cf="http://xbrl.org/2008/filter/concept" xmlns:cfi="http://xbrl.org/2010/custom-function" xmlns:df="http://xbrl.org/2008/filter/dimension" xmlns:ea="http://xbrl.org/2008/assertion/existence" xmlns:formula="http://xbrl.org/2008/formula" xmlns:gen="http://xbrl.org/2008/generic" xmlns:gf="http://xbrl.org/2008/filter/general" xmlns:icf="http://www.ssm.com.my/customfunction" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:mf="http://xbrl.org/2008/filter/match" xmlns:msg="http://xbrl.org/2010/message" xmlns:pf="http://xbrl.org/2008/filter/period" xmlns:ssm-cfn="http://www.ssm.com.my/function" xmlns:tf="http://xbrl.org/2008/filter/tuple" xmlns:uf="http://xbrl.org/2008/filter/unit" xmlns:va="http://xbrl.org/2008/assertion/value" xmlns:validation="http://xbrl.org/2008/validation" xmlns:valm="http://xbrl.org/2010/message/validation" xmlns:variable="http://xbrl.org/2008/variable" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- Role Ref -->
  <link:roleRef roleURI="http://www.xbrl.org/2008/role/link" xlink:type="simple" xlink:href="http://www.xbrl.org/2008/generic-link.xsd#standard-link-role" />
  <!-- ArcRole Ref -->
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/function-implementation" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/custom-function-implementation.xsd#cfi-implementation" />
  <gen:link xlink:type="extended" xlink:role="http://www.xbrl.org/2008/role/link">
    <variable:function xlink:type="resource" xlink:label="cust-fn-get-labels" xlink:title="cust-fn-get-labels" name="ssm-cfn:get-labels" output="xs:string*">
      <variable:input type="xs:QName*" />
      <variable:input type="xs:string" />
    </variable:function>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/function-implementation" xlink:from="cust-fn-get-labels" xlink:to="cust-fn-get-labels-impl" order="1.0" use="optional" />
    <cfi:implementation xlink:type="resource" xlink:label="cust-fn-get-labels-impl" xlink:title="cust-fn-get-labels-impl">
      <cfi:input name="elements" />
      <cfi:input name="labelsJSON" />
      <cfi:step name="m">parse-json($labelsJSON)</cfi:step>
      <cfi:step name="labels">for $i in $elements  return map:get($m,fn:namespace-uri-from-QName($i) || '}' || fn:local-name-from-QName($i))</cfi:step>
      <cfi:step name="out">string-join($labels,',')</cfi:step>
      <cfi:output>$out</cfi:output>
    </cfi:implementation>
    <variable:function xlink:type="resource" xlink:label="cust-fn-get-missing-elements" xlink:title="cust-fn-get-missing-elements" name="ssm-cfn:get-missing-elements" output="xs:QName*">
      <variable:input type="node()*" />
      <variable:input type="xs:QName*" />
    </variable:function>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/function-implementation" xlink:from="cust-fn-get-missing-elements" xlink:to="cust-fn-get-missing-elements-impl" order="1.0" use="optional" />
    <cfi:implementation xlink:type="resource" xlink:label="cust-fn-get-missing-elements-impl" xlink:title="cust-fn-get-missing-elements-impl">
      <cfi:input name="facts" />
      <cfi:input name="allElements" />
      <cfi:step name="out">$allElements[not(. = $facts/node-name())]</cfi:step>
      <cfi:output>$out</cfi:output>
    </cfi:implementation>
  </gen:link>
</link:linkbase>